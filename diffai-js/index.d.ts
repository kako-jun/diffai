/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface JsDiffOptions {
  /** Numerical comparison tolerance */
  epsilon?: number
  /** Key to use for array element identification */
  arrayIdKey?: string
  /** Regex pattern for keys to ignore */
  ignoreKeysRegex?: string
  /** Only show differences in paths containing this string */
  pathFilter?: string
  /** Output format */
  outputFormat?: string
  /** Show unchanged values as well */
  showUnchanged?: boolean
  /** Show type information in output */
  showTypes?: boolean
  /** Enable memory optimization for large files */
  useMemoryOptimization?: boolean
  /** Batch size for memory optimization */
  batchSize?: number
  /** Enable ML analysis features */
  mlAnalysisEnabled?: boolean
  /** Tensor comparison mode: "shape", "data", "both" */
  tensorComparisonMode?: string
  /** Model format: "pytorch", "safetensors", "onnx", etc. */
  modelFormat?: string
  /** Enable scientific precision mode */
  scientificPrecision?: boolean
  /** Threshold for detecting significant weight changes */
  weightThreshold?: number
  /** Enable activation function analysis */
  activationAnalysis?: boolean
  /** Enable learning rate tracking */
  learningRateTracking?: boolean
  /** Enable optimizer comparison */
  optimizerComparison?: boolean
  /** Enable loss tracking */
  lossTracking?: boolean
  /** Enable accuracy tracking */
  accuracyTracking?: boolean
  /** Enable model version checking */
  modelVersionCheck?: boolean
}
export interface JsDiffResult {
  /** Type of difference ('Added', 'Removed', 'Modified', 'TypeChanged', etc.) */
  diffType: string
  /** Path to the changed element */
  path: string
  /** Old value (for Modified/TypeChanged) */
  oldValue?: any
  /** New value (for Modified/TypeChanged/Added) */
  newValue?: any
  /** Value (for Removed) */
  value?: any
  /** Specific data for AI/ML results */
  oldShape?: Array<number>
  newShape?: Array<number>
  oldNorm?: number
  newNorm?: number
  oldDescription?: string
  newDescription?: string
  magnitude?: number
  oldFunction?: string
  newFunction?: string
  oldLearningRate?: number
  newLearningRate?: number
  oldOptimizer?: string
  newOptimizer?: string
  oldLoss?: number
  newLoss?: number
  oldAccuracy?: number
  newAccuracy?: number
  oldVersion?: string
  newVersion?: string
}
/**
 * Unified diff function for JavaScript/Node.js with AI/ML capabilities
 *
 * Compare two JavaScript objects or values and return differences with AI/ML specific analysis.
 *
 * # Arguments
 *
 * * `old` - The old value (JavaScript object, array, or primitive)
 * * `new` - The new value (JavaScript object, array, or primitive)
 * * `options` - Optional configuration object
 *
 * # Returns
 *
 * Array of difference objects with AI/ML specific difference types
 *
 * # Example
 *
 * ```javascript
 * const { diff } = require('diffai-js');
 *
 * const old = { model: { layers: [{ type: "dense", units: 128 }] } };
 * const new = { model: { layers: [{ type: "dense", units: 256 }] } };
 * const result = diff(old, new);
 * console.log(result); // [{ type: 'Modified', path: 'model.layers[0].units', oldValue: 128, newValue: 256 }]
 * ```
 */
export declare function diff(old: any, new: any, options?: JsDiffOptions | undefined | null): Array<JsDiffResult>
