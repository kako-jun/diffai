# GitHub Actions CI/CD Pipeline with diffai v0.3.16 Automatic ML Analysis
#
# This workflow demonstrates how to integrate diffai's automatic comprehensive
# ML analysis into CI/CD pipelines. All 11 ML analysis functions run
# automatically with zero configuration for PyTorch/Safetensors files.
#
# Features:
# - Convention over Configuration: No manual analysis setup required
# - 11 Automatic ML Analyses: Learning rate, gradients, quantization, etc.
# - Zero Setup: Automatic detection and comprehensive analysis
# - Deployment Gates: Automated decision making based on ML analysis
# - Multi-platform: Linux, macOS, Windows support

name: ML Model Validation with diffai

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
    paths:
      - '**/*.pt'
      - '**/*.pth'
      - '**/*.safetensors'
      - '**/*.npy'
      - '**/*.npz'
      - '**/*.mat'

jobs:
  ml-model-analysis:
    name: Automatic ML Model Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for baseline comparison
    
    - name: 🦀 Setup Rust (for diffai)
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
    
    - name: 📦 Cache Cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: 🤖 Install diffai
      run: |
        echo "🔧 Installing diffai v0.3.16+ with automatic ML analysis..."
        cargo install diffai
        echo "✅ diffai installed:"
        diffai --version
        echo ""
        echo "🎯 diffai Features:"
        echo "  ✓ Convention over Configuration"
        echo "  ✓ 11 Automatic ML Analysis Functions"
        echo "  ✓ Zero Setup Required"
        echo "  ✓ Comprehensive Model Validation"
    
    - name: 🔍 Detect ML files
      id: detect-ml-files
      run: |
        echo "🔍 Detecting ML files in changes..."
        
        # Get list of changed ML files
        if git rev-parse --verify HEAD~1 >/dev/null 2>&1; then
          changed_files=$(git diff --name-only HEAD~1 HEAD -- "*.pt" "*.pth" "*.safetensors" "*.npy" "*.npz" "*.mat" || true)
        else
          changed_files=$(git ls-files -- "*.pt" "*.pth" "*.safetensors" "*.npy" "*.npz" "*.mat" || true)
        fi
        
        if [[ -n "$changed_files" ]]; then
          echo "📋 Changed ML files:"
          echo "$changed_files" | while read -r file; do
            if [[ -n "$file" && -f "$file" ]]; then
              echo "  📄 $file"
            fi
          done
          
          # Set output for next steps
          echo "has_ml_changes=true" >> $GITHUB_OUTPUT
          echo "$changed_files" > ml_files.txt
        else
          echo "✅ No ML files changed - skipping analysis"
          echo "has_ml_changes=false" >> $GITHUB_OUTPUT
        fi
    
    - name: 🎯 Run Automatic ML Analysis
      if: steps.detect-ml-files.outputs.has_ml_changes == 'true'
      id: ml-analysis
      run: |
        echo "🤖 Running diffai automatic comprehensive ML analysis..."
        echo "✨ Convention over Configuration - All 11 analyses run automatically"
        echo ""
        
        analysis_failed=false
        analysis_results=""
        
        while IFS= read -r file; do
          if [[ -n "$file" && -f "$file" ]]; then
            echo "📊 Analyzing: $file"
            
            # Try to get previous version for comparison
            if git rev-parse --verify HEAD~1 >/dev/null 2>&1; then
              if git show HEAD~1:"$file" > baseline_model.tmp 2>/dev/null; then
                echo "  🔄 Comparing with previous version..."
                
                # Run diffai automatic analysis (no configuration needed)
                if diffai_output=$(diffai baseline_model.tmp "$file" --output json 2>&1); then
                  echo "  ✅ Automatic ML analysis completed"
                  
                  # Parse results
                  if [[ "$diffai_output" != "[]" && -n "$diffai_output" ]]; then
                    echo "  📊 Changes detected - processing ML analysis results..."
                    
                    # Extract key metrics (simplified parsing for demo)
                    total_changes=$(echo "$diffai_output" | jq '. | length' 2>/dev/null || echo "0")
                    
                    if [[ "$total_changes" -gt 0 ]]; then
                      echo "  🔍 Found $total_changes changes"
                      
                      # Check for critical changes
                      arch_changes=$(echo "$diffai_output" | jq '[.[] | select(has("ArchitectureChanged"))] | length' 2>/dev/null || echo "0")
                      
                      if [[ "$arch_changes" -gt 0 ]]; then
                        echo "  ⚠️  Architecture changes detected - requires manual review"
                        analysis_failed=true
                      else
                        echo "  ✅ Changes appear to be training-related (weights/parameters)"
                      fi
                      
                      # Display automatic analysis summary
                      echo "  🎯 Automatic ML Analysis Completed:"
                      echo "    ✓ Learning Rate Analysis    ✓ Quantization Analysis"
                      echo "    ✓ Optimizer Comparison      ✓ Convergence Analysis"
                      echo "    ✓ Loss Tracking            ✓ Activation Analysis"
                      echo "    ✓ Accuracy Tracking        ✓ Attention Analysis"
                      echo "    ✓ Model Version Analysis   ✓ Ensemble Analysis"
                      echo "    ✓ Gradient Analysis"
                    else
                      echo "  ✅ No significant changes detected"
                    fi
                  else
                    echo "  ✅ Models are identical"
                  fi
                  
                  analysis_results="$analysis_results$file: ✅ Analyzed\n"
                else
                  echo "  ❌ Analysis failed: $diffai_output"
                  analysis_failed=true
                  analysis_results="$analysis_results$file: ❌ Failed\n"
                fi
                
                rm -f baseline_model.tmp
              else
                echo "  🆕 New file - no baseline comparison"
                analysis_results="$analysis_results$file: 🆕 New\n"
              fi
            else
              echo "  🆕 First commit - no baseline comparison"
              analysis_results="$analysis_results$file: 🆕 First commit\n"
            fi
            
            echo ""
          fi
        done < ml_files.txt
        
        # Set outputs
        if [[ "$analysis_failed" == true ]]; then
          echo "analysis_passed=false" >> $GITHUB_OUTPUT
        else
          echo "analysis_passed=true" >> $GITHUB_OUTPUT
        fi
        
        echo -e "$analysis_results" > analysis_summary.txt
    
    - name: 📋 Analysis Summary
      if: steps.detect-ml-files.outputs.has_ml_changes == 'true'
      run: |
        echo "📋 ML Analysis Summary:"
        echo "======================"
        cat analysis_summary.txt
        echo ""
        echo "🤖 diffai Automatic Analysis Features Used:"
        echo "  1. 📈 Learning Rate Analysis     - Training dynamics tracking"
        echo "  2. ⚙️  Optimizer Comparison      - State and momentum analysis"
        echo "  3. 📉 Loss Tracking             - Convergence pattern analysis"
        echo "  4. 🎯 Accuracy Tracking         - Performance metrics monitoring"
        echo "  5. 🏷️  Model Version Analysis   - Checkpoint evolution tracking"
        echo "  6. 🌊 Gradient Analysis         - Flow and stability analysis"
        echo "  7. 🔢 Quantization Analysis     - Precision detection"
        echo "  8. 📊 Convergence Analysis      - Learning curve analysis"
        echo "  9. ⚡ Activation Analysis       - Function usage analysis"
        echo "  10. 👁️  Attention Analysis       - Transformer mechanism analysis"
        echo "  11. 🤝 Ensemble Analysis        - Multi-model structure detection"
        echo ""
        echo "💡 Zero configuration required - Convention over Configuration!"
    
    - name: 🚀 Deployment Gate
      if: steps.detect-ml-files.outputs.has_ml_changes == 'true'
      run: |
        if [[ "${{ steps.ml-analysis.outputs.analysis_passed }}" == "true" ]]; then
          echo "✅ All ML analyses passed - ready for deployment"
          echo "🎯 Comprehensive validation completed automatically"
        else
          echo "❌ ML analysis detected issues requiring manual review"
          echo "🔍 Check the analysis results above for details"
          exit 1
        fi
    
    - name: 💾 Archive Analysis Results
      if: steps.detect-ml-files.outputs.has_ml_changes == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: ml-analysis-results
        path: |
          analysis_summary.txt
          ml_files.txt
        retention-days: 30

  # Additional job for multi-platform testing (optional)
  cross-platform-validation:
    name: Cross-platform ML Analysis
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🦀 Setup Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: 🤖 Install diffai
      run: |
        cargo install diffai
        diffai --version
    
    - name: 🧪 Test diffai installation
      run: |
        echo "🧪 Testing diffai automatic analysis on ${{ matrix.os }}..."
        echo "✨ All 11 ML analysis functions available"
        echo "🎯 Convention over Configuration enabled"
        # Add your specific tests here
    
  # Notification job (optional)
  notify-results:
    name: Notify Analysis Results
    needs: [ml-model-analysis]
    runs-on: ubuntu-latest
    if: always() && github.event_name == 'pull_request'
    
    steps:
    - name: 📢 Comment on PR
      uses: actions/github-script@v6
      with:
        script: |
          const { data: pr } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          
          let message = "## 🤖 diffai Automatic ML Analysis Results\n\n";
          
          if ("${{ needs.ml-model-analysis.outputs.analysis_passed }}" === "true") {
            message += "✅ **All ML analyses passed successfully**\n\n";
            message += "🎯 **Automatic Analysis Completed:**\n";
            message += "- All 11 ML analysis functions executed\n";
            message += "- Zero configuration required\n";
            message += "- Models validated and ready for deployment\n\n";
          } else {
            message += "⚠️ **ML analysis detected changes requiring review**\n\n";
            message += "🔍 **Please review the analysis results in the workflow logs**\n\n";
          }
          
          message += "**diffai Features Used:**\n";
          message += "- Convention over Configuration\n";
          message += "- 11 Automatic ML Analysis Functions\n";
          message += "- Comprehensive Model Validation\n";
          message += "- Zero Setup Required\n\n";
          message += "*Powered by diffai v0.3.16+ 🚀*";
          
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: message
          });